{"version":3,"sources":["webpack:///./src/assets/permission.js","webpack:///./src/views/Pages/Login/register.vue?9c84","webpack:///src/views/Pages/Login/register.vue","webpack:///./src/views/Pages/Login/register.vue?3d6f","webpack:///./src/views/Pages/Login/register.vue","webpack:///./src/views/Pages/Login/register.vue?fa0f"],"names":["checkEmail","email","myreg","test","checkPhone","phone","render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","ref","attrs","regForm","rules","_v","model","value","callback","$$v","$set","expression","isload","on","sendcode","_s","codemsg","$event","handregister","toLogin","staticRenderFns","component"],"mappings":"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","file":"js/chunk-7a5030d8.d09f08a3.js","sourcesContent":["import { Message } from 'element-ui'\r\n//一些方法\r\n\r\n//判断是否为空\r\nexport function isEmpty(title,value){\r\n    if(!value){\r\n        return Message({\r\n            message:`请填写${title}`,\r\n            type:'error'\r\n        })\r\n    }\r\n}\r\n\r\n// 邮箱验证\r\nexport function checkEmail(email){\r\n    let myreg = /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n    return myreg.test(email);\r\n}\r\n//手机号验证\r\nexport function checkPhone(phone){\r\n    let myreg = /^[1][3,4,5,7,8][0-9]{9}$/;\r\n    return myreg.test(phone);\r\n}\r\n\r\n\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"login\"},[_c('div',{staticClass:\"login-banner\"},[_vm._m(0),_c('el-form',{ref:\"regForm\",staticClass:\"login-form\",attrs:{\"model\":_vm.regForm,\"rules\":_vm.rules}},[_c('div',{staticClass:\"title-container\"},[_c('h2',[_vm._v(\"用户注册\")])]),_c('el-form-item',{attrs:{\"prop\":\"username\"}},[_c('el-input',{attrs:{\"placeholder\":\"用户账号\"},model:{value:(_vm.regForm.username),callback:function ($$v) {_vm.$set(_vm.regForm, \"username\", $$v)},expression:\"regForm.username\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"realName\"}},[_c('el-input',{attrs:{\"placeholder\":\"真实姓名\"},model:{value:(_vm.regForm.realName),callback:function ($$v) {_vm.$set(_vm.regForm, \"realName\", $$v)},expression:\"regForm.realName\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"password\"}},[_c('el-input',{attrs:{\"placeholder\":\"账号密码\"},model:{value:(_vm.regForm.password),callback:function ($$v) {_vm.$set(_vm.regForm, \"password\", $$v)},expression:\"regForm.password\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"userphone\"}},[_c('el-input',{attrs:{\"placeholder\":\"大陆手机号\"},model:{value:(_vm.regForm.userphone),callback:function ($$v) {_vm.$set(_vm.regForm, \"userphone\", $$v)},expression:\"regForm.userphone\"}})],1),_c('el-form-item',{attrs:{\"prop\":\"useremail\"}},[_c('div',{staticClass:\"emailcode\"},[_c('div',{staticClass:\"email-input\"},[_c('el-input',{attrs:{\"placeholder\":\"个人邮箱\"},model:{value:(_vm.regForm.useremail),callback:function ($$v) {_vm.$set(_vm.regForm, \"useremail\", $$v)},expression:\"regForm.useremail\"}})],1),_c('div',{staticClass:\"send-code\"},[_c('el-button',{attrs:{\"loading\":_vm.isload},on:{\"click\":_vm.sendcode}},[_vm._v(_vm._s(_vm.codemsg))])],1)])]),_c('el-form-item',{attrs:{\"prop\":\"emailcode\"}},[_c('span'),_c('el-input',{attrs:{\"placeholder\":\"邮箱验证码\"},model:{value:(_vm.regForm.emailcode),callback:function ($$v) {_vm.$set(_vm.regForm, \"emailcode\", $$v)},expression:\"regForm.emailcode\"}})],1),_c('el-form-item',[_c('el-button',{staticClass:\"register-btn\",attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handregister('regForm')}}},[_vm._v(\"注册\")])],1),_c('el-form-item',[_c('el-button',{staticClass:\"login-btn\",on:{\"click\":_vm.toLogin}},[_vm._v(\"登录\")])],1)],1)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"login-logo\"},[_c('h1',[_vm._v(\"多方数据计算平台\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"login\">\r\n        <div class=\"login-banner\">\r\n            <!-- logo -->\r\n            <div class=\"login-logo\">\r\n                <h1>多方数据计算平台</h1>\r\n            </div>\r\n            <!-- 表 -->\r\n            <el-form class=\"login-form\"\r\n                ref=\"regForm\" :model=\"regForm\" :rules=\"rules\">\r\n                <div class=\"title-container\">\r\n                    <h2>用户注册</h2>\r\n                </div>\r\n                <el-form-item prop=\"username\">\r\n                    <el-input placeholder=\"用户账号\" v-model=\"regForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"realName\">\r\n                    <el-input placeholder=\"真实姓名\" v-model=\"regForm.realName\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\">\r\n                    <el-input placeholder=\"账号密码\" v-model=\"regForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"userphone\">\r\n                    <el-input placeholder=\"大陆手机号\" v-model=\"regForm.userphone\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"useremail\">\r\n                    <div class=\"emailcode\">\r\n                        <div class=\"email-input\">\r\n                            <el-input placeholder=\"个人邮箱\" v-model=\"regForm.useremail\"></el-input>\r\n                        </div>\r\n                        <div class=\"send-code\">\r\n                            <el-button :loading=\"isload\" @click=\"sendcode\">{{codemsg}}</el-button>\r\n                        </div>\r\n                    </div>            \r\n                </el-form-item>\r\n                <el-form-item prop=\"emailcode\">\r\n                    <span></span>\r\n                    <el-input placeholder=\"邮箱验证码\" v-model=\"regForm.emailcode\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" class=\"register-btn\" @click=\"handregister('regForm')\">注册</el-button>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button class=\"login-btn\" @click=\"toLogin\">登录</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { checkEmail,checkPhone } from '@/assets/permission'\r\nexport default {\r\n    data(){\r\n        const validateEmail=(rule,value,callback)=>{\r\n            let res= checkEmail(value);\r\n            if(!res){\r\n                callback(new Error('邮箱格式错误'));\r\n            }else{\r\n                callback();\r\n            }\r\n        };\r\n        const validatePhone = (rule,value,callback)=>{\r\n            let res= checkPhone(value);\r\n            if(!res){\r\n                callback(new Error('手机号格式错误'));\r\n            }else{\r\n                callback();\r\n            }\r\n        };\r\n        const validateUser=(rule,value,callback)=>{\r\n            this.$api.checkuser(value).then(res=>{\r\n                if(res.err_code === 100){\r\n                    callback();\r\n                }else{\r\n                    callback(new Error('该账号已被注册'));\r\n                }\r\n            })\r\n        };\r\n      \r\n        return{\r\n            isload:false,\r\n            codemsg:'发送验证码',\r\n            time:60,\r\n            regForm:{\r\n                account:'',\r\n                useremail:'',\r\n                password:'',\r\n                userphone:'',\r\n                emailcode:'',\r\n                username:'',\r\n                realName:''\r\n            },\r\n            rules:{\r\n                username:[\r\n                    { required:true,message:'请输入账号',trigger:'blur'},\r\n                    { validator:validateUser,trigger:'blur'}\r\n                ],\r\n                useremail:[\r\n                    { reuqired:true,message:'请输入邮箱号',trigger:'blur'},\r\n                    { validator:validateEmail,trigger:'blur'}\r\n                ],\r\n                emailcode:[\r\n                    { required:true,message:'请输入邮箱验证码',trigger:'blur'},\r\n                ],\r\n                userphone:[\r\n                    { reuqired:true,message:'请输入大陆手机号',trigger:'blur'},\r\n                    { validator:validatePhone,trigger:'blur'}\r\n                ],\r\n                password:[\r\n                    { required:true,message:'请输入账号密码',trigger:'blur'},\r\n                    { min: 6, max: 16, message: '密码长度在 6 到 16 之间', trigger: 'blur' }\r\n                ],\r\n                realName:[\r\n                    { required:true,message:'请输入真实姓名',trigger:'blur'}\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n        retime(){\r\n            let that=this;\r\n            that.codemsg=`${that.time}s后重新发送`\r\n            let timer=setInterval(()=>{\r\n                if(that.time === 0){\r\n                    clearInterval(timer);\r\n                    that.isload=false;\r\n                    that.codemsg='发送验证码';\r\n                }else{\r\n                    that.time--;\r\n                    that.codemsg=`${that.time}s后重新发送`\r\n                }\r\n            },1000)\r\n        },\r\n        sendcode(){//发送验证码\r\n            let that = this;\r\n            if(!that.regForm.username){\r\n                return that.$message({\r\n                    message:'请填写用户账号',\r\n                    type:'error'\r\n                });\r\n            }\r\n            if(!that.regForm.useremail){\r\n                return that.$message({\r\n                    message:'请填写用户邮箱号',\r\n                    type:'error'\r\n                });\r\n            }\r\n            that.retime();\r\n            this.$api.getemcode({\r\n                account:that.regForm.username,\r\n                mail: that.regForm.useremail\r\n            }).then(res=>{\r\n                if(res.err_code === 100){\r\n                    that.isload=true;\r\n                    that.$message({\r\n                        message:'验证码发送成功,请注意查收',\r\n                        type:'success'\r\n                    })\r\n                }else{\r\n                    that.$message({\r\n                        message:'验证码发送失败',\r\n                        type:'error'\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        handregister(formName){//注册\r\n            let that=this;\r\n            this.$refs[formName].validate((valid)=>{\r\n                if(valid){\r\n                    that.$api.regsiter({\r\n                        account:that.regForm.username,\r\n                        code: that.regForm.emailcode,\r\n                        mail: that.regForm.useremail,\r\n                        password: that.regForm.password,\r\n                        phone: that.regForm.userphone,\r\n                        realName: that.regForm.realName,\r\n                        username: that.regForm.username\r\n                    }).then(res=>{\r\n                        if(res.err_code === 100){\r\n                            that.$message({\r\n                                message:'用户注册成功',\r\n                                type:'success'\r\n                            });\r\n                            this.$refs[formName].resetFields();\r\n                        }else if(res.err_code === 102){\r\n                            that.$message({\r\n                                message:'账号已存在',\r\n                                type:'error'\r\n                            });\r\n                        }\r\n                        else{\r\n                            that.$message({\r\n                                message:'用户注册失败',\r\n                                type:'error'\r\n                            });\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        toLogin(){//登录\r\n            this.$router.push('/auth/login')\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .emailcode{\r\n        display: flex;\r\n    }\r\n    .send-code{\r\n        position: absolute;\r\n        right: 0;\r\n        top: 2px;\r\n    }\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./register.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./register.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./register.vue?vue&type=template&id=f8717f52&scoped=true&\"\nimport script from \"./register.vue?vue&type=script&lang=js&\"\nexport * from \"./register.vue?vue&type=script&lang=js&\"\nimport style0 from \"./register.vue?vue&type=style&index=0&id=f8717f52&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f8717f52\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./register.vue?vue&type=style&index=0&id=f8717f52&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./register.vue?vue&type=style&index=0&id=f8717f52&lang=scss&scoped=true&\""],"sourceRoot":""}